// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package org.birchavenue.startrack


case class DGType(subsidiaryClass: Option[String] = None,
  packagingGroup: Option[String] = None,
  dgClass: Option[String] = None,
  commonName: Option[String] = None,
  finalDGDeclarationPrintedDateTime: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  lock_seq: Option[String] = None,
  outerPackaging: Option[String] = None,
  properShippingName: Option[String] = None,
  unNumber: Option[String] = None)


case class PODTypeType(image: Option[org.birchavenue.startrack.ImageTypable] = None,
  attachment: Seq[org.birchavenue.startrack.ImageTypable] = Nil)


case class ConsignmentTrackingEventType(scanner: Option[org.birchavenue.startrack.ScannerType] = None,
  vehicle: Option[org.birchavenue.startrack.VehicleType] = None,
  scanMode: Option[String] = None,
  transitState: Option[String] = None,
  eventDateTime: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  id: Option[String] = None,
  manualEvent: Option[String] = None,
  user: Option[String] = None,
  quantityDelivered: Option[BigInt] = None,
  quantityOnHand: Option[BigInt] = None,
  scanningDepot: Option[String] = None,
  signatoryName: Option[String] = None,
  signatureImageContent: Option[String] = None,
  statusDescription: Option[String] = None) extends TrackingEventTypable


case class ConsignmentType(references: Seq[org.birchavenue.startrack.ReferenceTypeType] = Nil,
  serviceCode: Option[String] = None,
  secondaryQcCode: Seq[String] = Nil,
  receiver: Option[org.birchavenue.startrack.SenderTypeType] = None,
  sender: Option[org.birchavenue.startrack.ReceiverTypeType] = None,
  specialInstructions: Seq[String] = Nil,
  despatchLocationCode: Option[String] = None,
  statusHistory: Seq[org.birchavenue.startrack.StatusHistoryType] = Nil,
  trackingEvents: Seq[org.birchavenue.startrack.ConsignmentTrackingEventType] = Nil,
  lineItems: Seq[org.birchavenue.startrack.LineItemTypeType] = Nil,
  team_locatn: Option[org.birchavenue.startrack.TeamLocationType] = None,
  image: Seq[org.birchavenue.startrack.ImageTypeType] = Nil,
  dangerousGoods: Option[org.birchavenue.startrack.DGType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val billedInd = attributes.get("@billedInd") map { _.as[Boolean] }
  lazy val bookInNotAfter = attributes.get("@bookInNotAfter") map { _.as[javax.xml.datatype.XMLGregorianCalendar] }
  lazy val bookInNotBefore = attributes.get("@bookInNotBefore") map { _.as[javax.xml.datatype.XMLGregorianCalendar] }
  lazy val carrierCode = attributes.get("@carrierCode") map { _.as[String] }
  lazy val consolidate = attributes.get("@consolidate") map { _.as[Boolean] }
  lazy val consolidateSendersReference = attributes.get("@consolidateSendersReference") map { _.as[Boolean] }
  lazy val creationDateTime = attributes.get("@creationDateTime") map { _.as[javax.xml.datatype.XMLGregorianCalendar] }
  lazy val deliveryDepot = attributes.get("@deliveryDepot") map { _.as[String] }
  lazy val despatchDate = attributes.get("@despatchDate") map { _.as[javax.xml.datatype.XMLGregorianCalendar] }
  lazy val despatchDepot = attributes.get("@despatchDepot") map { _.as[String] }
  lazy val despatchNotification = attributes.get("@despatchNotification") map { _.as[Boolean] }
  lazy val despatchSummaryId = attributes.get("@despatchSummaryId") map { _.as[String] }
  lazy val driverCube = attributes.get("@driverCube") map { _.as[BigDecimal] }
  lazy val etaDate = attributes.get("@etaDate") map { _.as[javax.xml.datatype.XMLGregorianCalendar] }
  lazy val id = attributes.get("@id") map { _.as[String] }
  lazy val labelText = attributes.get("@labelText") map { _.as[String] }
  lazy val labelText_2 = attributes.get("@labelText_2") map { _.as[String] }
  lazy val labelText_3 = attributes.get("@labelText_3") map { _.as[String] }
  lazy val lastStatusDateTime = attributes.get("@lastStatusDateTime") map { _.as[javax.xml.datatype.XMLGregorianCalendar] }
  lazy val lock_seq = attributes.get("@lock_seq") map { _.as[String] }
  lazy val payerAccountNumber = attributes.get("@payerAccountNumber") map { _.as[String] }
  lazy val payerType = attributes.get("@payerType") map { _.as[String] }
  lazy val podSignatoryName = attributes.get("@podSignatoryName") map { _.as[String] }
  lazy val podSignature = attributes.get("@podSignature") map { _.as[String] }
  lazy val publishedQcCode = attributes.get("@publishedQcCode") map { _.as[String] }
  lazy val quotationNumber = attributes.get("@quotationNumber") map { _.as[String] }
  lazy val requestService = attributes.get("@requestService") map { _.as[Boolean] }
  lazy val source = attributes.get("@source") map { _.as[String] }
  lazy val status = attributes.get("@status") map { _.as[String] }
  lazy val totalQuantity = attributes.get("@totalQuantity") map { _.as[BigInt] }
  lazy val totalVolume = attributes.get("@totalVolume") map { _.as[Double] }
  lazy val totalWeight = attributes.get("@totalWeight") map { _.as[Double] }
  lazy val typeValue = attributes.get("@type") map { _.as[String] }
  lazy val unitType = attributes.get("@unitType") map { _.as[String] }
  lazy val userName = attributes.get("@userName") map { _.as[String] }
}



case class DangerousGoodsTypeType(interimDGPrinted: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  lock_seq: Option[String] = None,
  quantity: Option[BigInt] = None,
  weight: Option[BigDecimal] = None)


case class DepotType(code: Option[String] = None,
  name: Option[String] = None,
  abvreviation: Option[String] = None,
  latitude: Option[String] = None,
  longitude: Option[String] = None,
  adminDepotCode: Option[String] = None)


case class FreightItemTrackingEventType(scanner: Option[org.birchavenue.startrack.ScannerType] = None,
  vehicle: Option[org.birchavenue.startrack.VehicleType] = None,
  eventDateTime: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  id: Option[String] = None,
  manualEvent: Option[String] = None,
  user: Option[String] = None,
  lane: Option[String] = None,
  scanMode: Option[String] = None,
  sortCode: Option[String] = None,
  statusDescription: Option[String] = None,
  transitState: Option[String] = None) extends TrackingEventTypable


case class FreightItemTypeType(freightItemTrackingEvent: Seq[org.birchavenue.startrack.FreightItemTrackingEventType] = Nil,
  statusHistory: Seq[org.birchavenue.startrack.StatusHistoryType] = Nil,
  printStatus: Option[org.birchavenue.startrack.PrintStatusType] = None,
  incident: Seq[String] = Nil,
  cost: Option[BigDecimal] = None,
  currentTransitState: Option[String] = None,
  etaDttm: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  id: Option[String] = None,
  lock_seq: Option[String] = None,
  measuredCube: Option[BigDecimal] = None,
  measuredWeight: Option[BigDecimal] = None,
  riskWarrantyValue: Option[BigInt] = None,
  sequenceNumber: Option[BigInt] = None,
  status: Option[String] = None)


case class ImageTypeType(id: Option[String] = None,
  creationDateTime: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  description: Option[String] = None,
  imageContent: Option[org.birchavenue.startrack.ImageContentType] = None,
  typeValue: Option[String] = None,
  signatoryName: Option[String] = None,
  cartridge: Option[String] = None,
  frame: Option[String] = None,
  consignmentId: Option[String] = None,
  isPOD: Option[Boolean] = None) extends ImageTypable


case class LineItemTypeType(dangerousGoods: Option[org.birchavenue.startrack.DangerousGoodsTypeType] = None,
  freightItem: Seq[org.birchavenue.startrack.FreightItemTypeType] = Nil,
  references: Seq[org.birchavenue.startrack.ReferenceTypeType] = Nil,
  UOM: Option[String] = None,
  cube: Option[BigDecimal] = None,
  interimDespatchInd: Option[Boolean] = None,
  lineNumber: Option[BigInt] = None,
  lock_seq: Option[String] = None,
  noOfLabels: Option[BigInt] = None,
  packagingType: Option[String] = None,
  printInternalLabels: Option[Boolean] = None,
  printLabelsNow: Option[Boolean] = None,
  printSecondLabels: Option[Boolean] = None,
  quantity: Option[String] = None,
  riskWarrantyLevel: Option[String] = None,
  unitType: Option[String] = None,
  weight: Option[BigDecimal] = None)


case class PersonType(location: Option[String] = None,
  name: Option[String] = None)


case class PrintStatusType(printedInd: Option[Boolean] = None,
  reprintedInd: Option[Boolean] = None)


case class ReceiverTypeType(name: Seq[String] = Nil,
  accountNumber: Option[String] = None,
  contactDetails: Seq[org.birchavenue.startrack.ContactDetailsComplex] = Nil,
  id: Option[String] = None,
  shortName: Option[String] = None)


case class ReferenceTypeType(lock_seq: Option[String] = None,
  name: Option[String] = None,
  printOnLabel: Option[Boolean] = None,
  priority: Option[BigInt] = None,
  typeValue: Option[String] = None,
  value: Option[String] = None)


case class ScannerType(depotCode: Option[String] = None,
  id: Option[String] = None,
  typeValue: Option[String] = None)


case class SenderTypeType(name: Seq[String] = Nil,
  accountNumber: Option[String] = None,
  contactDetails: Seq[org.birchavenue.startrack.ContactDetailsComplex] = Nil,
  id: Option[String] = None,
  shortName: Option[String] = None)


case class StatusHistoryType(user: Option[org.birchavenue.startrack.UserStatusHistoryType] = None,
  dateTime: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  scanningDepot: Option[String] = None,
  signatoryName: Option[String] = None,
  status: Option[String] = None)


case class TeamLocationType(prim_air_depot: Option[String] = None,
  secnd_air_depot: Option[String] = None)


trait TrackingEventTypable {
  val scanner: Option[org.birchavenue.startrack.ScannerType]
  val vehicle: Option[org.birchavenue.startrack.VehicleType]
  val eventDateTime: Option[javax.xml.datatype.XMLGregorianCalendar]
  val id: Option[String]
  val manualEvent: Option[String]
  val user: Option[String]
}


case class TrackingEventType(scanner: Option[org.birchavenue.startrack.ScannerType] = None,
  vehicle: Option[org.birchavenue.startrack.VehicleType] = None,
  eventDateTime: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  id: Option[String] = None,
  manualEvent: Option[String] = None,
  user: Option[String] = None) extends TrackingEventTypable


case class UserStatusHistoryType(dateTime: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  status: Option[String] = None,
  user: Option[String] = None)


case class VehicleType(id: Option[String] = None,
  typeValue: Option[String] = None)

