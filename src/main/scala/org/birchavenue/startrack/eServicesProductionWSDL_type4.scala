// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package org.birchavenue.startrack


case class PODType(image: Option[org.birchavenue.startrack.ImageType] = None,
  attachment: Seq[org.birchavenue.startrack.ImageTypable] = Nil)


case class DangerousGoodsType(subsidiaryClass: Option[String] = None,
  packagingGroup: String,
  dgClass: String,
  lock_seq: Option[String] = None,
  commonName: String,
  outerPackaging: String,
  properShippingName: String,
  quantity: BigInt,
  unNumber: BigInt,
  weight: BigDecimal)


case class DespatchOptionsType(closeOnSave: Option[Boolean] = None,
  confirm: Option[Boolean] = None,
  consolidate: Option[Boolean] = None,
  consolidateSendersReference: Option[Boolean] = None,
  noOfLabels: Option[BigInt] = None,
  printInternalLabels: Option[Boolean] = None,
  printLabelsNow: Option[Boolean] = None,
  printSecondLabels: Option[Boolean] = None,
  requestService: Option[Boolean] = None)


case class DespatchTypeType(receiver: org.birchavenue.startrack.ReceiverType,
  sender: org.birchavenue.startrack.SenderType,
  specialInstructions: Seq[String] = Nil,
  reference: Seq[org.birchavenue.startrack.ReferenceType] = Nil,
  despatchLocationCode: String,
  despatchOptions: Option[org.birchavenue.startrack.DespatchOptionsType] = None,
  lineItems: Seq[org.birchavenue.startrack.LineItemType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val adhocReceiver = attributes.get("@adhocReceiver") map { _.as[Boolean] }
  lazy val bookInNotAfter = attributes.get("@bookInNotAfter") map { _.as[javax.xml.datatype.XMLGregorianCalendar] }
  lazy val bookInNotBefore = attributes.get("@bookInNotBefore") map { _.as[javax.xml.datatype.XMLGregorianCalendar] }
  lazy val carrierCode = attributes.get("@carrierCode") map { _.as[String] }
  lazy val despatchDate = attributes("@despatchDate").as[javax.xml.datatype.XMLGregorianCalendar]
  lazy val despatchNotification = attributes.get("@despatchNotification") map { _.as[Boolean] }
  lazy val labelText_1 = attributes.get("@labelText_1") map { _.as[String] }
  lazy val labelText_2 = attributes.get("@labelText_2") map { _.as[String] }
  lazy val labelText_3 = attributes.get("@labelText_3") map { _.as[String] }
  lazy val payerAccountNumber = attributes("@payerAccountNumber").as[BigInt]
  lazy val payerType = attributes.get("@payerType") map { _.as[String] }
  lazy val quotationNumber = attributes.get("@quotationNumber") map { _.as[String] }
  lazy val typeValue = attributes("@type").as[String]
  lazy val userName = attributes.get("@userName") map { _.as[String] }
}



case class FreightItemType(incident: Seq[String] = Nil,
  reference: Seq[org.birchavenue.startrack.ReferenceType] = Nil,
  consolidateSenderReference: Option[Boolean] = None,
  currentTransitState: Option[String] = None,
  id: Option[String] = None,
  measuredCube: Option[BigDecimal] = None,
  status: Option[String] = None,
  weight: Option[BigInt] = None)


case class ImageType(id: Option[String] = None,
  creationDateTime: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  description: Option[String] = None,
  imageContent: Option[org.birchavenue.startrack.ImageContentType] = None,
  typeValue: Option[String] = None,
  signatoryName: Option[String] = None) extends ImageTypable


case class LineItemType(dangerousGoods: Option[org.birchavenue.startrack.DangerousGoodsType] = None,
  cost: Option[BigDecimal] = None,
  reference: Seq[org.birchavenue.startrack.ReferenceType] = Nil,
  lock_seq: Option[String] = None,
  atl: Option[Boolean] = None,
  customerCube: BigDecimal,
  customerHeight: Option[BigDecimal] = None,
  customerLength: Option[BigDecimal] = None,
  customerWeight: BigDecimal,
  customerWidth: Option[BigDecimal] = None,
  etaDttm: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  packagingType: String,
  quantity: BigInt,
  riskWarrantyValue: Option[BigInt] = None,
  serviceCode: String)


case class PickupBookingIdType(bookingNumber: String,
  createdDateTime: javax.xml.datatype.XMLGregorianCalendar)


case class PickupBookingType(userName: Option[String] = None,
  orgName: Seq[String] = Nil,
  contactName: Option[String] = None,
  contactPhoneNumber: Option[String] = None,
  contactEmailAddress: Option[String] = None,
  pickupPoint: Option[String] = None,
  pickupAddress: org.birchavenue.startrack.AddressComplex,
  deliveryAddress: Option[org.birchavenue.startrack.AddressComplex] = None,
  closingTime: javax.xml.datatype.XMLGregorianCalendar,
  pickupDetails: org.birchavenue.startrack.PickupDetailsType,
  payerAccountNo: String,
  consignmentId: Option[String] = None,
  despatchLocationCode: Option[String] = None,
  pickupFreightItemGroup: Seq[org.birchavenue.startrack.PickupFreightItemGroupTypable] = Nil,
  despatch_location_lock_seq: Option[String] = None)


case class PickupDetailsType(requestedDate: javax.xml.datatype.XMLGregorianCalendar,
  timeReady: Seq[org.birchavenue.startrack.TimeReadyType] = Nil,
  destination: Option[String] = None,
  specialInstructions: Seq[String] = Nil)


case class PickupFreightItemGroup(quantity: Option[BigInt] = None,
  weight: Option[BigDecimal] = None,
  height: Option[BigInt] = None,
  width: Option[BigInt] = None,
  length: Option[BigInt] = None,
  unitType: Option[String] = None,
  serviceCode: Option[String] = None,
  serviceType: Option[String] = None,
  serviceRank: Option[String] = None,
  unitTypeRank: Option[String] = None) extends PickupFreightItemGroupTypable


trait PickupFreightItemGroupTypable {
  val quantity: Option[BigInt]
  val weight: Option[BigDecimal]
  val height: Option[BigInt]
  val width: Option[BigInt]
  val length: Option[BigInt]
  val unitType: Option[String]
  val serviceCode: Option[String]
}


case class PickupFreightItemGroupType(quantity: Option[BigInt] = None,
  weight: Option[BigDecimal] = None,
  height: Option[BigInt] = None,
  width: Option[BigInt] = None,
  length: Option[BigInt] = None,
  unitType: Option[String] = None,
  serviceCode: Option[String] = None) extends PickupFreightItemGroupTypable


case class ReceiverType(name: Seq[String] = Nil,
  accountNumber: Option[String] = None,
  contactDetails: Seq[org.birchavenue.startrack.ContactDetailsComplex] = Nil,
  id: Option[String] = None,
  shortName: Option[String] = None)


case class ReferenceType(lock_seq: Option[String] = None,
  name: Option[String] = None,
  printOnLabel: Option[Boolean] = None,
  priority: Option[BigInt] = None,
  typeValue: Option[String] = None,
  value: Option[String] = None)


case class RequestorType(orgName: Seq[String] = Nil,
  emailAddress: Option[String] = None,
  phoneNumber: Option[String] = None,
  contactName: Option[String] = None,
  payerAccountNumber: Option[String] = None)


case class SenderType(name: Seq[String] = Nil,
  accountNumber: Option[String] = None,
  contactDetails: Seq[org.birchavenue.startrack.ContactDetailsComplex] = Nil,
  id: Option[String] = None,
  shortName: Option[String] = None)


case class TimeReadyType(serviceType: org.birchavenue.startrack.ServiceTypeEnum,
  time: javax.xml.datatype.XMLGregorianCalendar)


case class UpdateDangerousGoodsType(lock_seq: Option[String] = None,
  quantity: BigInt,
  weight: BigDecimal)


case class UpdateDespatchType(consignmentId: String,
  despatchLocationCode: String,
  updateStatus: Option[String] = None,
  userName: Option[String] = None,
  labelText: Option[Option[String]] = None,
  labelText_2: Option[Option[String]] = None,
  labelText_3: Option[Option[String]] = None,
  specialInstructions: Seq[Option[String]] = Nil,
  lock_seq: String,
  reference: Seq[org.birchavenue.startrack.UpdateReferenceType] = Nil,
  lineItems: Seq[org.birchavenue.startrack.UpdateLineItems] = Nil,
  despatchOptions: Option[org.birchavenue.startrack.DespatchOptionsType] = None)


trait UpdateLineItemTypable {
  val dangerousGoods: Option[org.birchavenue.startrack.UpdateDangerousGoodsType]
  val reference: Seq[org.birchavenue.startrack.UpdateReferenceType]
  val cost: Option[BigDecimal]
  val lock_seq: String
  val atl: Option[Boolean]
  val customerCube: BigDecimal
  val customerHeight: Option[BigDecimal]
  val customerLength: Option[BigDecimal]
  val customerWeight: BigDecimal
  val customerWidth: Option[BigDecimal]
  val etaDttm: Option[javax.xml.datatype.XMLGregorianCalendar]
  val lineNumber: BigInt
  val packagingType: String
  val quantity: BigInt
  val riskWarrantyValue: Option[BigInt]
  val serviceCode: String
}


case class UpdateLineItemType(dangerousGoods: Option[org.birchavenue.startrack.UpdateDangerousGoodsType] = None,
  reference: Seq[org.birchavenue.startrack.UpdateReferenceType] = Nil,
  cost: Option[BigDecimal] = None,
  lock_seq: String,
  atl: Option[Boolean] = None,
  customerCube: BigDecimal,
  customerHeight: Option[BigDecimal] = None,
  customerLength: Option[BigDecimal] = None,
  customerWeight: BigDecimal,
  customerWidth: Option[BigDecimal] = None,
  etaDttm: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  lineNumber: BigInt,
  packagingType: String,
  quantity: BigInt,
  riskWarrantyValue: Option[BigInt] = None,
  serviceCode: String) extends UpdateLineItemTypable


case class UpdateLineItems(dangerousGoods: Option[org.birchavenue.startrack.UpdateDangerousGoodsType] = None,
  reference: Seq[org.birchavenue.startrack.UpdateReferenceType] = Nil,
  cost: Option[BigDecimal] = None,
  lock_seq: String,
  opCode: org.birchavenue.startrack.OpCodeEnum,
  atl: Option[Boolean] = None,
  customerCube: BigDecimal,
  customerHeight: Option[BigDecimal] = None,
  customerLength: Option[BigDecimal] = None,
  customerWeight: BigDecimal,
  customerWidth: Option[BigDecimal] = None,
  etaDttm: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  lineNumber: BigInt,
  packagingType: String,
  quantity: BigInt,
  riskWarrantyValue: Option[BigInt] = None,
  serviceCode: String) extends UpdateLineItemTypable


case class UpdateReferenceType(opCode: org.birchavenue.startrack.OpCodeEnum,
  newValue: Option[String] = None,
  reference: org.birchavenue.startrack.ReferenceType)

