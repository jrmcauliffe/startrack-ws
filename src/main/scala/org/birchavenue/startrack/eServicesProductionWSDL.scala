// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package org.birchavenue.startrack


trait Operations {
  def getDepots(header: org.birchavenue.startrack.Tp_TransactionHeaderType, depotCode: Option[String], lastUpdated: Option[javax.xml.datatype.XMLGregorianCalendar]): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.GetDepotsResponse]
  def getPickupCutoffTimes(header: org.birchavenue.startrack.TransactionHeaderType, pickupCutoffParameters: org.birchavenue.startrack.PickupCutoffTime): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.LocationCutoffTimeComplex]
  def validateAddress(header: org.birchavenue.startrack.Tp_TransactionHeaderType, address: Option[org.birchavenue.startrack.AddressComplex]): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.ValidateAddressResponse]
  def calculateEstimatedTime(header: org.birchavenue.startrack.TransactionHeaderType, senderLocation: org.birchavenue.startrack.ExtLocationDetailsType, receiverLocation: org.birchavenue.startrack.ExtLocationDetailsType, serviceCode: String, choice: org.birchavenue.startrack.ChoiceType, validateAddress: Option[Boolean]): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.CalculateEstimatedTimeResponse]
  def getLocations(header: org.birchavenue.startrack.Tp_TransactionHeaderType, locationDetails: org.birchavenue.startrack.LocationDetailsType, lastUpdated: Option[javax.xml.datatype.XMLGregorianCalendar]): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.GetLocationsResponse]
  def getNearestDepot(header: org.birchavenue.startrack.Tp_TransactionHeaderType, locationDetails: org.birchavenue.startrack.LocationDetailsType, lastUpdated: Option[javax.xml.datatype.XMLGregorianCalendar]): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.GetNearestDepotResponse]
  def searchConsignments(header: org.birchavenue.startrack.TransactionHeaderType, choice: Option[org.birchavenue.startrack.ChoiceTypeType], consignmentType: Option[org.birchavenue.startrack.SearchConsignmentRequestType], serviceCode: Seq[String], consignmentStatus: Seq[String], receiver: Option[org.birchavenue.startrack.PersonSearchType], sender: Option[org.birchavenue.startrack.PersonSearchType], despatchLocationCode: Seq[String], dangerousGoodsOnly: Option[Boolean], pagination: org.birchavenue.startrack.PaginationType): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.SearchConsignmentsResponse]
  def getConsignmentDetails(header: org.birchavenue.startrack.TransactionHeaderType, consignmentId: Seq[String]): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.GetConsignmentDetailResponse]
  def getServiceCodes(header: org.birchavenue.startrack.Tp_TransactionHeaderType, code: Option[String], lastUpdated: Option[javax.xml.datatype.XMLGregorianCalendar]): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.GetServiceCodesResponse]
  def createPickupBooking(header: org.birchavenue.startrack.TransactionHeaderType, pickupBooking: org.birchavenue.startrack.PickupBookingTypeType): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.PickupBookingIdType]
  def calculateCost(header: org.birchavenue.startrack.TransactionHeaderType, senderLocation: org.birchavenue.startrack.ExtLocationDetailsType, receiverLocation: org.birchavenue.startrack.ExtLocationDetailsType, serviceCode: String, noOfItems: BigInt, weight: BigDecimal, volume: BigDecimal, includeTransitWarranty: Option[Boolean], transitWarrantyValue: Option[BigDecimal], includeRiskWarranty: Option[Boolean], riskWarrantyValue: Option[BigDecimal], includeFuelSurcharge: Option[Boolean], includeSecuritySurcharge: Option[Boolean]): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.CalculateCostResponse]
  def getQCCodes(header: org.birchavenue.startrack.Tp_TransactionHeaderType, code: Option[String], lastUpdated: Option[javax.xml.datatype.XMLGregorianCalendar]): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.GetQCCodesResponse]
  def calculateCostAndEstimatedTime(header: org.birchavenue.startrack.TransactionHeaderType, senderLocation: org.birchavenue.startrack.ExtLocationDetailsType, receiverLocation: org.birchavenue.startrack.ExtLocationDetailsType, serviceCode: String, noOfItems: BigInt, weight: BigDecimal, volume: BigDecimal, includeTransitWarranty: Option[Boolean], transitWarrantyValue: Option[BigDecimal], includeRiskWarranty: Option[Boolean], riskWarrantyValue: Option[BigDecimal], includeFuelSurcharge: Option[Boolean], includeSecuritySurcharge: Option[Boolean], choice: org.birchavenue.startrack.ChoiceType): Either[scalaxb.Soap11Fault[org.birchavenue.startrack.Fault], org.birchavenue.startrack.CalculateCostAndEstimatedTimeResponse]
}




